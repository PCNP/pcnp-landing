// eslint-disable-next-line no-undef
module.exports = {
  root: true,
  'env': {
    'browser': true,
    'node': true,
  },
  'parser': '@typescript-eslint/parser',
  'extends': [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:import/errors',
    'plugin:import/typescript',
  ],
  'parserOptions': { sourceType: 'module' },
  'settings': {
    react: { version: 'detect' },
    'import/resolver': {
      'node': {
        'extensions': ['.ts', '.tsx', '.js', '.jsx'],
        'moduleDirectory': ['node_modules', './'],
      },
    },
  },
  'plugins': [
    'react',
    'react-hooks',
    '@typescript-eslint',
    'import',
  ],
  'rules': {
    quotes: ['error', 'single'],
    semi: ['error', 'never'],
    'indent': ['error', 2, { 'SwitchCase': 1 }],
    'no-console': 'error',
    'max-len': ['error', 120],
    'jsx-quotes': ['error', 'prefer-single'],
    'no-multiple-empty-lines': ['error', {
      max: 2,
      maxEOF: 0,
      maxBOF: 0,
    }],
    'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
    'no-else-return': ['error', { allowElseIf: true }],
    'object-curly-spacing': ['error', 'always'],
    'prefer-destructuring': ['error', {
      VariableDeclarator: {
        array: false,
        object: true,
      },
      AssignmentExpression: {
        array: false,
        object: false,
      },
    }],
    'object-curly-newline': ['error', {
      'ObjectExpression': {
        minProperties: 2,
        multiline: true,
      },
      'ObjectPattern': { 'multiline': true },
      'ImportDeclaration': 'never',
      'ExportDeclaration': {
        'multiline': true,
        'minProperties': 3,
      },
    }],
    'no-trailing-spaces': ['error', { 'skipBlankLines': true }],
    'comma-dangle': ['error', 'always-multiline'],
    'arrow-body-style': 'off',
    'consistent-return': 'off',
    'operator-linebreak': 'off',
    'no-mixed-operators': 'off',
    'implicit-arrow-linebreak': 'off',
    'no-confusing-arrow': 'off',
    'no-underscore-dangle': 'off',
    'spaced-comment': 'off',
    'default-case': 'off',
    'no-continue': 'off',
    'guard-for-in': 'off',
    'no-restricted-syntax': 'off',
    'no-restricted-globals': 'off',
    'no-plusplus': 'off',
    'no-case-declarations': 'off',
    'arrow-parens': ['error', 'always'],
    'curly': 'error',
    'space-infix-ops': 'error',

    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-namespace': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    '@typescript-eslint/member-delimiter-style': ['error', {
      multiline: { delimiter: 'none' },
      singleline: { delimiter: 'comma' },
    }],

    'react/destructuring-assignment': 'off',
    'react/state-in-constructor': 'off',
    'react/display-name': 'off',
    'react/prop-types': 'off',
    'react/sort-comp': 'off',
    'react/prefer-stateless-function': 'off',
    'react/no-did-update-set-state': 'off',
    'react/no-children-prop': 'error',
    'react/no-deprecated': 'error',
    'react/self-closing-comp': 'error',
    'react/no-direct-mutation-state': 'error',
    'react/require-render-return': 'error',
    'react/no-unsafe': 'error',
    'react/no-array-index-key': 'off',
    'react/static-property-placement': 'off',

    'react/jsx-closing-tag-location': 'error',
    'react/jsx-curly-brace-presence': ['error', {
      props: 'never',
      children: 'never',
    }],
    'react/jsx-closing-bracket-location': [2, 'tag-aligned'],
    'react/jsx-boolean-value': ['error', 'never', { 'always': ['personal'] }],
    // перенос на новую строку
    'react/jsx-curly-newline': ['error', {
      multiline: 'require',
      singleline: 'consistent',
    }],
    'react/jsx-curly-spacing': [2, {
      'when': 'never',
      'children': { 'when': 'always' },
      'spacing': { 'objectLiterals': 'never' },
    }],
    'react/jsx-filename-extension': ['error', { extensions: ['.tsx'] }],
    'react/jsx-first-prop-new-line': ['error', 'multiline-multiprop'],
    'react/jsx-fragments': ['error', 'syntax'],
    'react/jsx-indent': ['error', 2, {
      indentLogicalExpressions: true,
      checkAttributes: false,
    }],
    'react/jsx-indent-props': ['error', 2],
    'react/jsx-max-props-per-line': ['error', {
      'maximum': 1,
      'when': 'always',
    }],
    'react/jsx-one-expression-per-line': ['error', { allow: 'single-child' }],
    'react/jsx-tag-spacing': 'error',
    // обернуть в круглые скобки
    'react/jsx-wrap-multilines': ['error', {
      declaration: 'parens-new-line',
      assignment: 'parens-new-line',
      return: 'parens-new-line',
      arrow: 'parens-new-line',
      condition: 'parens-new-line',
      logical: 'parens-new-line',
      prop: 'ignore',
    }],
    'react/jsx-props-no-spreading': 'off',

    'react-hooks/exhaustive-deps': 'error',

    'jsx-a11y/no-static-element-interactions': 'off',
    'jsx-a11y/no-noninteractive-element-interactions': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/iframe-has-title': 'off',
    'padded-blocks': ['error', 'never'],

    'import/prefer-default-export': 'off',
    'import/no-duplicates': 2,
    'import/first': 2,
    'import/order': [2, {
      groups: ['builtin', 'external', ['sibling', 'parent'], 'index'],
      pathGroups: [
        {
          group: 'sibling',
          pattern: 'src/**/*',
        },
        {
          group: 'index',
          pattern: './*',
        },
      ],
      'newlines-between': 'always',
    }],
    'import/newline-after-import': ['error', { 'count': 2 }],
  },
}
